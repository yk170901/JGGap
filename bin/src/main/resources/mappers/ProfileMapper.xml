<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <!-- 위 문장으로 아래는 mapper의 내용이 됨 -->
  
  <mapper namespace="ProfileDAO">
  
	<!-- 마이페이지 유저 정보 불러오기 -->
  	<select id="profile_info" resultType="profile" parameterType="Object">
  		SELECT summoner_id, trunc(honor_rate/honor_cnt,1) as honor_rate, profile_icon, user_pwd, site_level
  		FROM user_info
  		WHERE user_no = #{user_no}
  	</select>
  	
  	<!-- 마이페이지 친구 신청 목록 불러오기 -->
  	<select id="profile_friend" resultType="profile" parameterType="Object">
  	SELECT user_info.site_level,user_info.USER_NO ,trunc(user_info.honor_rate/user_info.honor_cnt,1) as honor_rate, user_info.profile_icon, user_info.SUMMONER_ID 
	FROM friend, USER_INFO 
	WHERE friend.friend  = #{summoner_id} AND status='대기' AND user_info.user_no = friend.user_no  AND user_info.SUMMONER_ID NOT in (
		SELECT FRIEND 
		FROM friend
		WHERE user_no= #{user_no}
		AND status='차단')
  	</select>
  	
  	<!-- 마이페이지 뱃지 목록 불러오기 -->
  	<select id="profile_badge" resultType="profile" parameterType="Object">
  		SELECT *
  		FROM user_badge NATURAL JOIN badge
  		WHERE user_no = #{user_no}
  	</select>
  	
  	<!-- 마이페이지 채택 목록 불러오기 -->
  	<select id="profile_choice" resultType="profile" parameterType="Object">
		SELECT user_info.SUMMONER_ID, trunc(user_info.HONOR_RATE/user_info.honor_cnt,1) as honor_rate, user_info.site_level, lol_info.SOLO_TIER, lol_info.solo_tier_grade, choice.choice_user_no
		FROM choice, user_info, LOL_INFO
		WHERE choice.user_no = #{user_no} 
		AND choice.CHOICE_USER_NO = user_info.USER_NO
		AND choice.CHOICE_USER_NO = lol_info.USER_NO
  	</select>
  	
  	<!-- 마이페이지 게시글 목록 불러오기 -->
  	<select id="profile_board" resultType="profile" parameterType="Object">
  		SELECT post_no, a.*
		FROM (
			SELECT post_no, board_title, TO_CHAR(board_date,'YYYY-MM-DD HH:MM') as board_date
			FROM board
			WHERE user_no= #{user_no} AND DELETED =0
			ORDER BY POST_NO DESC
		) a
		<![CDATA[where rownum <= 10]]>
  	</select>
  	
  	<!-- 비밀번호 변경 -->
  	<update id="chg_pwd" parameterType="profile">
  		UPDATE user_info
  		SET user_pwd = #{user_pwd}
  		WHERE user_no = #{user_no}
  	</update>
  	
  	<!-- 프로필 아이콘 변경 -->
  	<update id="chg_icon" parameterType="profile">
  		UPDATE user_info
  		SET profile_icon = #{profile_icon}
  		WHERE user_no = #{user_no}
  	</update>
  	
  	<!-- 채택 해제 -->
  	<delete id="delete_choice" parameterType="profile">
  		DELETE FROM choice
  		WHERE choice_user_no = #{choice_user_no}
  		AND user_no = #{user_no}
  	</delete>
  	
  	<!-- 명예 점수 -->
  	<update id="honor_rate" parameterType="profile">
  		UPDATE USER_INFO 
		SET HONOR_RATE = HONOR_RATE + #{honor_rate}, honor_cnt = honor_cnt + 1
		WHERE USER_NO = #{choice_user_no}
  	</update>
  	
  	<!--  친구 신청 수락 -->
  	<update id="friend_add1" parameterType="hashmap">
  		update friend
		set status = #{status}
		where user_no = #{friend_user_no} and friend = #{my_summoner_id}
  	</update>
  	
  	<insert id="friend_add2" parameterType="hashmap">
  		insert into friend
		values (user_friend_no.NEXTVAL, #{my_user_no}, #{friend_summoner_id}, #{status})
  	</insert>
  	
  	<!-- 친구 신청 차단 -->
  	 <insert id="friend_block" parameterType="hashmap">
  		insert into friend
		values (user_friend_no.NEXTVAL, #{my_user_no}, #{friend_summoner_id}, #{status})
  	</insert>
  	
  	<!-- 친구 신청 취소 -->
  	<delete id="friend_cancle" parameterType="hashmap">
  		delete
		from friend
		where user_no = #{friend_user_no} and friend=#{my_summoner_id} and status = '대기'
  	</delete>
  	
  </mapper>